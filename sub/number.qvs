// ----------------------------------------------------------------------------------------------------------------
/*
    Author      : Zidmann (emmanuel.zidel@gmail.com)
    Script      : number.qvs
    Version     : 0.0.0
    Description : Module containing all the useful number functions
 */
// ----------------------------------------------------------------------------------------------------------------

LET vErrorCount = $(ScriptErrorCount);

// ----------------------------------------------------------------------------------------------------------------
// FUNCTIONS TO INTERACT WITH THE NUMBERS
// ----------------------------------------------------------------------------------------------------------------

/*
 * Description : Return 0 if the number is positive or its value
 *       Input : $1 - Number to process
 *      Output : None
 */
SET number_pos = IF($1>0, +$1, 0);

/*
 * Description : Return 0 if the number is negative or its value
 *       Input : $1 - Number to process
 *      Output : None
 */
SET number_neg = IF($1<0, -$1, 0);

/*
 * Description : Return which sign has a number (0 is considered having no sign)
 *       Input : $1 - Number to process
 *      Output : None
 */
SET number_sign = IF($1=0, '0', IF($1>0, '+', '-'));

/*
 * Description : Return the absolute value of a number
 *       Input : $1 - Number to process
 *      Output : None
 */
SET number_abs = FABS($1);

/*
 * Description : Return the order in the 10 base of a number
 *       Input : $1 - Number to process
 *      Output : None
 */
SET number_order = IF(FABS($1)>=10, FLOOR(LOG10(FABS($1))), 0);

/*
 * Description : Return the appropriate order to use with a file size
 *       Input : $1 - Size of a file (in bytes)
 *      Output : The size order
 */
SET filesize_order = IF(FABS($1)>=1024, FLOOR(LOG(FABS($1))/LOG(1024)), 0);

/*
 * Description : Return the appropriate unit to use with a file size
 *       Input : $1 - Size of a file (in bytes)
 *      Output : The unit appropriate
 */
SET filesize_unit = IF($1<0, '', IF($1<pow(1024, 1), 'b', IF($1<pow(1024, 2), 'Kb', IF($1<pow(1024, 3), 'Mb', IF($1<pow(1024, 4), 'Gb', IF($1<pow(1024, 5), 'Tb', 'Pb'))))));

/*
 * Description : Return the size of a file in a readable form
 *       Input : $1 - Size of a file (in bytes)
 *      Output : The readable form of the size
 */
SET filesize_readable = IF($1<0, '', IF($1<pow(1024, 1), $1&' b', IF($1<pow(1024, 2), FLOOR($1/pow(1024, 1), 0.1)&' Kb', IF($1<pow(1024, 3), FLOOR($1/pow(1024, 2), 0.1)&' Mb', IF($1<pow(1024, 4), FLOOR($1/pow(1024, 3), 0.1)&' Gb', IF($1<pow(1024, 5), FLOOR($1/pow(1024, 4), 0.1)&' Tb', FLOOR($1/pow(1024, 5), 0.1)&' Pb'))))));

// ----------------------------------------------------------------------------------------------------------------
// PRINT IF THE LOADING FINISHED WITH OR WITHOUT ANY ERRORS
// ----------------------------------------------------------------------------------------------------------------
LET vDiffErrorCount = $(ScriptErrorCount) - vErrorCount;
IF (vDiffErrorCount > 0) THEN
    call console_error('Date module loaded with $(vDiffErrorCount) error(s)');
ELSE
    call console_info('Date module successfully loaded');
END IF;
