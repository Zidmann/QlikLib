// ----------------------------------------------------------------------------------------------------------------
/*
    Author      : Zidmann (emmanuel.zidel@gmail.com)
    Script      : qliklibtest.qvs
    Description : Script to use the library functions to check everything still works
 */
// ----------------------------------------------------------------------------------------------------------------

SET vQliklibPath='..';
$(Must_Include='$(vQliklibPath)\core.qvs');

TRACE == Testing the console printing functions ==;
call console_print('Test of the function console_print');
call console_info('Test of the function console_info');
call console_sucess('Test of the function console_sucess');
call console_error('Test of the function console_error');
TRACE Test of console_jumpline; call console_jumpline;
TRACE Test of console_delimitation; call console_delimitation;
TRACE;

TRACE == Testing the log functions ==;
TRACE No function available yet;
TRACE;

TRACE == Testing the date management functions ==;
TRACE No function available yet;
TRACE;

TRACE == Testing the file management functions ==;
SET vPath = C:\dir1\dir2\dir3\File.ext;           TRACE vPath=$(vPath);
LET vDirname = $(file_dirname($(vPath)));         TRACE Test of the macro file_dirname : vDirname=$(vDirname);
LET vBasename = $(file_basename($(vPath)));       TRACE Test of the macro file_basename : vBasename=$(vBasename);
LET vFileExtension = $(file_extension($(vPath))); TRACE Test of the macro file_extension : vFileExtension=$(vFileExtension);
TRACE;

LET vPath = DocumentPath(); TRACE vPath=$(vPath);
LET vFileSize = $(file_size($(vPath))); TRACE Test of the macro file_size : vFileSize=$(vFileSize);
TRACE;

SET vCsvPath = C:\dir1\dir2\dir3\File.Csv;
SET vXlsPath = C:\dir1\dir2\dir3\File.xLs; SET vXlsSheet = Sheet1;
SET vQvdPath = C:\dir1\dir2\dir3\File.qvD;
call file_option('$(vCsvPath)');                 TRACE Test of the macro file_option with : vCsvPath=$(vCsvPath); TRACE => vFileReadOption=$(vFileReadOption); TRACE => vFileWriteOption=$(vFileWriteOption);
call file_option('$(vXlsPath)', '$(vXlsSheet)'); TRACE Test of the macro file_option with : vXlsPath=$(vXlsPath); TRACE => vFileReadOption=$(vFileReadOption); TRACE => vFileWriteOption=$(vFileWriteOption);
call file_option('$(vQvdPath)');                 TRACE Test of the macro file_option with : vQvdPath=$(vQvdPath); TRACE => vFileReadOption=$(vFileReadOption); TRACE => vFileWriteOption=$(vFileWriteOption);
TRACE;

TRACE == Testing the table management functions ==;
SET vFilePathSrc = ./exempleSrc.txt; SET vFilePathTmp = ./exempleTmp.txt; SET vFilePathDst = ./exempleDest.csv;
SET vTableNameToRename  = myTableToRename; SET vTableNameTmp = myTableToDrop; SET vTableNameDst  = myTable; 
SET vColumnToDrop = COLUMN4;
TRACE Call of the function file_table_read for the first time to load the content in the temporary table;
call file_table_read('$(vFilePathSrc)',   '$(vTableNameTmp)');
TRACE Call of the function file_table_read for the second time to have twice data (with append mode);
call file_table_read('$(vFilePathSrc)',   '$(vTableNameTmp)', 1);
TRACE Call of the function table_file_write for the first time to copy these data in a temporary time;
call table_file_write('$(vTableNameTmp)', '$(vFilePathTmp)');
TRACE Call of the function table_file_write for the second time to copy again these data in a temporary time (data are duplicated 4 times);
call table_file_write('$(vTableNameTmp)', '$(vFilePathTmp)', 1);
TRACE Call of the function table_drop to clean the temporary table;
call table_drop('$(vTableNameTmp)');
TRACE Call of the function file_table_read to read the previous written file in the table which will be renamed later;
call file_table_read('$(vFilePathTmp)',  '$(vTableNameToRename)');
TRACE Call of the function column_drop to remove on column;
call column_drop('$(vTableNameToRename)',      '$(vColumnToDrop)');
TRACE Call of the function table_rename to rename the table;
call table_rename('$(vTableNameToRename)',     '$(vTableNameDst)');
TRACE;

TRACE == Testing the basical object management functions ==;
SET vMyVariable = OK;
call variable_exist('vMyVariable'); TRACE Test of the function variable_exist : with vVariableName = 'vMyVariable'; TRACE => vReturn=$(vReturn);
call variable_exist('vUndefined');  TRACE Test of the function variable_exist : with vVariableName = 'vUndefined';  TRACE => vReturn=$(vReturn);
LET vPath = DocumentPath();                  call file_exist('$(vPath)'); TRACE Test of the function file_exist : with vPath = $(vPath); TRACE => vReturn=$(vReturn);
LET vPath = 'notExistedPath/notExistedFile'; call file_exist('$(vPath)'); TRACE Test of the function file_exist : with vPath = $(vPath); TRACE => vReturn=$(vReturn);

SET vVarToFill1 = PRINT-OK;
call variable_fill('vVarToFill1', 'PRINT-KO');       TRACE Test of the function variable_fill; TRACE => vVarToFill1=$(vVarToFill1);
call variable_fill('vVarToFill2', '$(vVarToFill1)'); TRACE Test of the function variable_fill; TRACE => vVarToFill2=$(vVarToFill2);
call table_exist('$(vTableNameToRename)'); TRACE Test of the function table_exist : with vTableName = $(vTableNameToRename); TRACE => vReturn=$(vReturn);
call table_exist('$(vTableNameDst)');      TRACE Test of the function table_exist : with vTableName = $(vTableNameDst);      TRACE => vReturn=$(vReturn);
call column_exist('$(vTableNameToRename)', 'NOTEXIST');         TRACE Test of the function column_exist : with vTableName = $(vTableNameDst) vColumnName = NOTEXIST;         TRACE => vReturn=$(vReturn);
call column_exist('$(vTableNameDst)',      '$(vColumnToDrop)'); TRACE Test of the function column_exist : with vTableName = $(vTableNameDst) vColumnName = $(vColumnToDrop); TRACE => vReturn=$(vReturn);
call column_exist('$(vTableNameDst)',      'COLUMN1');          TRACE Test of the function column_exist : with vTableName = $(vTableNameDst) vColumnName = COLUMN1;          TRACE => vReturn=$(vReturn);
//excel_worksheet_exist
TRACE;
